let lastIndexOfInt = needle => {
  let needleLen = Caml.String.length(needle);
  /* This lets us simulate reversed strings without a memory allocation */
  let needleAt = i => needle.[needleLen - 1 - i];
  let indexOfInternalPartial = indexOfInternal(needle, needleAt);
  haystack => {
    let haystackLen = Caml.String.length(haystack);
    let haystackAt = i => haystack.[haystackLen - 1 - i];
    let index = indexOfInternalPartial(haystack, haystackAt);
    /* We get a "reversed" index, so we have to un-reverse it at the end. */
    index === (-1) ? index : haystackLen - needleLen - index;
  };
};
